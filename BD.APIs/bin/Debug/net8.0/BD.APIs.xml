<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BD.APIs</name>
    </assembly>
    <members>
        <member name="T:BD.APIs.Controllers.CountriesController">
            <summary>
            Controller for managing blocked countries
            </summary>
        </member>
        <member name="M:BD.APIs.Controllers.CountriesController.BlockCountry(BD.Core.Models.Requests.BlockCountryRequest)">
            <summary>
            Adds a country to the blocked list
            </summary>
            <param name="request">The country code to block (e.g., "US", "GB", "EG")</param>
            <returns>A confirmation message</returns>
            <response code="200">Country successfully blocked</response>
            <response code="400">Invalid country code or country already blocked</response>
        </member>
        <member name="M:BD.APIs.Controllers.CountriesController.UnblockCountry(System.String)">
            <summary>
            Removes a country from the blocked list
            </summary>
            <param name="countryCode">The country code to unblock (e.g., "US", "GB", "EG")</param>
            <returns>A confirmation message</returns>
            <response code="200">Country successfully unblocked</response>
            <response code="404">Country not found in blocked list</response>
        </member>
        <member name="M:BD.APIs.Controllers.CountriesController.GetBlockedCountries(System.Int32,System.Int32,System.String)">
            <summary>
            Gets all blocked countries with pagination and search
            </summary>
            <param name="page">Page number (default: 1)</param>
            <param name="pageSize">Results per page (default: 10)</param>
            <param name="search">Optional search term to filter countries by code or name</param>
            <returns>A list of blocked countries</returns>
            <response code="200">Returns the list of blocked countries</response>
        </member>
        <member name="M:BD.APIs.Controllers.CountriesController.TemporalBlockCountry(BD.Core.Models.Requests.TemporalBlockCountryRequest)">
            <summary>
            Temporarily blocks a country for a specific duration
            </summary>
            <param name="request">The request containing country code and block duration in minutes</param>
            <returns>A confirmation message with block expiration time</returns>
            <response code="200">Country successfully blocked temporarily</response>
            <response code="400">Invalid country code or duration</response>
            <response code="409">Country already blocked permanently or for a longer duration</response>
        </member>
        <member name="T:BD.APIs.Controllers.IpController">
            <summary>
            Controller for IP address validation and blocking checks
            </summary>
        </member>
        <member name="M:BD.APIs.Controllers.IpController.LookupIp(System.String)">
            <summary>
            Looks up geolocation information for an IP address
            </summary>
            <param name="ipAddress">Optional IP address to look up. If not provided, the caller's IP will be used</param>
            <returns>Geolocation data for the IP address</returns>
            <response code="200">Returns the geolocation data</response>
            <response code="400">Invalid IP address format</response>
            <response code="404">Geolocation data not found for the IP address</response>
        </member>
        <member name="M:BD.APIs.Controllers.IpController.CheckIpBlock">
            <summary>
            Checks if the caller's IP address is from a blocked country
            </summary>
            <returns>IP verification result with blocking status</returns>
            <response code="200">Returns the verification result</response>
        </member>
        <member name="T:BD.APIs.Controllers.LogsController">
            <summary>
            Controller for accessing blocked access attempt logs
            </summary>
        </member>
        <member name="M:BD.APIs.Controllers.LogsController.GetBlockedAttempts(System.Int32,System.Int32)">
            <summary>
            Gets a paginated list of blocked access attempts
            </summary>
            <param name="page">Page number (default: 1)</param>
            <param name="pageSize">Results per page (default: 10)</param>
            <returns>A list of blocked attempt logs</returns>
            <response code="200">Returns the list of blocked attempt logs</response>
        </member>
    </members>
</doc>
